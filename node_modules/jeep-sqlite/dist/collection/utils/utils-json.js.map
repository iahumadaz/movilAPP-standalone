{"version":3,"file":"utils-json.js","sourceRoot":"","sources":["../../src/utils/utils-json.ts"],"names":[],"mappings":"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","sourcesContent":["import { JsonColumn, JsonIndex, JsonTrigger, JsonView } from '../interfaces/interfaces';\nimport { UtilsSQLite } from './utils-sqlite';\n\nexport class UtilsJSON {\n\n  static async isJsonSQLite(obj: any): Promise<boolean> {\n    const keyFirstLevel: string[] = [\n      'database',\n      'version',\n      'overwrite',\n      'encrypted',\n      'mode',\n      'tables',\n      'views'\n    ];\n    if (\n      obj == null ||\n      (Object.keys(obj).length === 0 && obj.constructor === Object)\n    )\n      return false;\n    for (const key of Object.keys(obj)) {\n      if (keyFirstLevel.indexOf(key) === -1) return false;\n      if (key === 'database' && typeof obj[key] != 'string') return false;\n      if (key === 'version' && typeof obj[key] != 'number') return false;\n      if (key === 'overwrite' && typeof obj[key] != 'boolean') return false;\n      if (key === 'encrypted' && typeof obj[key] != 'boolean') return false;\n      if (key === 'mode' && typeof obj[key] != 'string') return false;\n      if (key === 'tables' && typeof obj[key] != 'object') return false;\n      if (key === 'tables') {\n        for (const oKey of obj[key]) {\n          const retTable: boolean = await UtilsJSON.isTable(oKey);\n          if (!retTable) return false;\n        }\n      }\n      if (key === 'views' && typeof obj[key] != 'object') return false;\n      if (key === 'views') {\n        for (const oKey of obj[key]) {\n          const retView: boolean = await UtilsJSON.isView(oKey);\n          if (!retView) return false;\n        }\n      }\n\n    }\n    return true;\n  }\n  static async isTable(obj: any): Promise<boolean> {\n    const keyTableLevel: string[] = [\n      'name',\n      'schema',\n      'indexes',\n      'triggers',\n      'values',\n    ];\n    let nbColumn = 0;\n    if (\n      obj == null ||\n      (Object.keys(obj).length === 0 && obj.constructor === Object)\n    )\n      return false;\n    for (const key of Object.keys(obj)) {\n      if (keyTableLevel.indexOf(key) === -1) return false;\n      if (key === 'name' && typeof obj[key] != 'string') return false;\n      if (key === 'schema' && typeof obj[key] != 'object') return false;\n      if (key === 'indexes' && typeof obj[key] != 'object') return false;\n      if (key === 'triggers' && typeof obj[key] != 'object') return false;\n      if (key === 'values' && typeof obj[key] != 'object') return false;\n      if (key === 'schema') {\n        obj['schema'].forEach(\n          (element: {\n            column?: string;\n            value: string;\n            foreignkey?: string;\n            primarykey?: string;\n            constraint?: string;\n          }) => {\n            if (element.column) {\n              nbColumn++;\n            }\n          },\n        );\n        for (let i = 0; i < nbColumn; i++) {\n          const retSchema: boolean = await UtilsJSON.isSchema(obj[key][i]);\n          if (!retSchema) return false;\n        }\n      }\n      if (key === 'indexes') {\n        for (const oKey of obj[key]) {\n          const retIndexes: boolean = await UtilsJSON.isIndexes(oKey);\n          if (!retIndexes) return false;\n        }\n      }\n      if (key === 'triggers') {\n        for (const oKey of obj[key]) {\n          const retTriggers: boolean = await UtilsJSON.isTriggers(oKey);\n          if (!retTriggers) return false;\n        }\n      }\n      if (key === 'values') {\n        if (nbColumn > 0) {\n          for (const oKey of obj[key]) {\n            if (typeof oKey != 'object' || oKey.length != nbColumn)\n              return false;\n          }\n        }\n      }\n    }\n\n    return true;\n  }\n  static async isSchema(obj: any): Promise<boolean> {\n    const keySchemaLevel: string[] = [\n      'column',\n      'value',\n      'foreignkey',\n      'primarykey',\n      'constraint',\n    ];\n    if (\n      obj == null ||\n      (Object.keys(obj).length === 0 && obj.constructor === Object)\n    )\n      return false;\n    for (const key of Object.keys(obj)) {\n      if (keySchemaLevel.indexOf(key) === -1) return false;\n      if (key === 'column' && typeof obj[key] != 'string') return false;\n      if (key === 'value' && typeof obj[key] != 'string') return false;\n      if (key === 'foreignkey' && typeof obj[key] != 'string') return false;\n      if (key === 'primarykey' && typeof obj[key] != 'string') return false;\n      if (key === 'constraint' && typeof obj[key] != 'string') return false;\n    }\n    return true;\n  }\n  static async isIndexes(obj: any): Promise<boolean> {\n    const keyIndexesLevel: string[] = ['name', 'value', 'mode'];\n    if (\n      obj == null ||\n      (Object.keys(obj).length === 0 && obj.constructor === Object)\n    )\n      return false;\n    for (const key of Object.keys(obj)) {\n      if (keyIndexesLevel.indexOf(key) === -1) return false;\n      if (key === 'name' && typeof obj[key] != 'string') return false;\n      if (key === 'value' && typeof obj[key] != 'string') return false;\n      if (\n        key === 'mode' &&\n        (typeof obj[key] != 'string' || obj[key].toUpperCase() != 'UNIQUE')\n      )\n        return false;\n    }\n    return true;\n  }\n  static async isTriggers(obj: any): Promise<boolean> {\n    const keyTriggersLevel: string[] = [\n      'name',\n      'timeevent',\n      'condition',\n      'logic',\n    ];\n    if (\n      obj == null ||\n      (Object.keys(obj).length === 0 && obj.constructor === Object)\n    )\n      return false;\n    for (const key of Object.keys(obj)) {\n      if (keyTriggersLevel.indexOf(key) === -1) return false;\n      if (key === 'name' && typeof obj[key] != 'string') return false;\n      if (key === 'timeevent' && typeof obj[key] != 'string') return false;\n      if (key === 'condition' && typeof obj[key] != 'string') return false;\n      if (key === 'logic' && typeof obj[key] != 'string') return false;\n    }\n    return true;\n  }\n  static async isView(obj: any): Promise<boolean> {\n    const keyViewLevel: string[] = ['name', 'value'];\n    if (\n      obj == null ||\n      (Object.keys(obj).length === 0 && obj.constructor === Object)\n    )\n      return false;\n    for (const key of Object.keys(obj)) {\n      if (keyViewLevel.indexOf(key) === -1) return false;\n      if (key === 'name' && typeof obj[key] != 'string') return false;\n      if (key === 'value' && typeof obj[key] != 'string') return false;\n    }\n    return true;\n  }\n  static async checkSchemaValidity(schema: JsonColumn[]): Promise<void> {\n    for (let i = 0; i < schema.length; i++) {\n      const sch: JsonColumn = {} as JsonColumn;\n      const keys: string[] = Object.keys(schema[i]);\n      if (keys.includes('column')) {\n        sch.column = schema[i].column;\n      }\n      if (keys.includes('value')) {\n        sch.value = schema[i].value;\n      }\n      if (keys.includes('foreignkey')) {\n        sch.foreignkey = schema[i].foreignkey;\n      }\n      if (keys.includes('constraint')) {\n        sch.constraint = schema[i].constraint;\n      }\n      const isValid: boolean = await UtilsJSON.isSchema(sch);\n      if (!isValid) {\n        return Promise.reject(\n          new Error(`CheckSchemaValidity: schema[${i}] not valid`),\n        );\n      }\n    }\n    return Promise.resolve();\n  }\n\n  static async checkIndexesValidity(indexes: JsonIndex[]): Promise<void> {\n    for (let i = 0; i < indexes.length; i++) {\n      const index: JsonIndex = {} as JsonIndex;\n      const keys: string[] = Object.keys(indexes[i]);\n      if (keys.includes('value')) {\n        index.value = indexes[i].value;\n      }\n      if (keys.includes('name')) {\n        index.name = indexes[i].name;\n      }\n      if (keys.includes('mode')) {\n        index.mode = indexes[i].mode;\n      }\n\n      const isValid: boolean = await UtilsJSON.isIndexes(index);\n      if (!isValid) {\n        return Promise.reject(\n          new Error(`CheckIndexesValidity: indexes[${i}] not valid`),\n        );\n      }\n    }\n    return Promise.resolve();\n  }\n  static async checkTriggersValidity(triggers: JsonTrigger[]): Promise<void> {\n    for (let i = 0; i < triggers.length; i++) {\n      const trigger: JsonTrigger = {} as JsonTrigger;\n      const keys: string[] = Object.keys(triggers[i]);\n      if (keys.includes('logic')) {\n        trigger.logic = triggers[i].logic;\n      }\n      if (keys.includes('name')) {\n        trigger.name = triggers[i].name;\n      }\n      if (keys.includes('timeevent')) {\n        trigger.timeevent = triggers[i].timeevent;\n      }\n      if (keys.includes('condition')) {\n        trigger.condition = triggers[i].condition;\n      }\n\n      const isValid: boolean = await UtilsJSON.isTriggers(trigger);\n      if (!isValid) {\n        return Promise.reject(\n          new Error(`CheckTriggersValidity: triggers[${i}] not valid`),\n        );\n      }\n    }\n    return Promise.resolve();\n  }\n  static async checkViewsValidity(views: JsonView[]): Promise<void> {\n    for (let i = 0; i < views.length; i++) {\n      const view: JsonView = {} as JsonView;\n      const keys: string[] = Object.keys(views[i]);\n      if (keys.includes('value')) {\n        view.value = views[i].value;\n      }\n      if (keys.includes('name')) {\n        view.name = views[i].name;\n      }\n\n      const isValid: boolean = await UtilsJSON.isView(view);\n      if (!isValid) {\n        return Promise.reject(\n          new Error(`CheckViewsValidity: views[${i}] not valid`),\n        );\n      }\n    }\n    return Promise.resolve();\n  }\n  static async getTableColumnNamesTypes(db: any, tableName: string): Promise<any> {\n    let resQuery: any[] = [];\n    const retNames: string[] = [];\n    const retTypes: string[] = [];\n    const query = `PRAGMA table_info('${tableName}');`;\n    try {\n      resQuery = await UtilsSQLite.queryAll(db, query, []);\n      if (resQuery.length > 0) {\n        for (const query of resQuery) {\n          retNames.push(query.name);\n          retTypes.push(query.type);\n        }\n      }\n      return Promise.resolve({ names: retNames, types: retTypes });\n    } catch (err) {\n      return Promise.reject(\n        new Error('GetTableColumnNamesTypes: ' + `${err.message}`),\n      );\n    }\n  }\n  static async getValues(db: any, query: string, tableName: string): Promise<any[]> {\n    const values: any[] = [];\n    try {\n      // get table column names and types\n      const tableNamesTypes = await UtilsJSON.getTableColumnNamesTypes(db, tableName);\n      let rowNames: string[] = [];\n      if (Object.keys(tableNamesTypes).includes('names')) {\n        rowNames = tableNamesTypes.names;\n      } else {\n        return Promise.reject(\n          new Error(`GetValues: Table ${tableName} no names`),\n        );\n      }\n      const retValues = await UtilsSQLite.queryAll(db, query, []);\n      for (const rValue of retValues) {\n        const row: any[] = [];\n        for (const rName of rowNames) {\n          if (Object.keys(rValue).includes(rName)) {\n            row.push(rValue[rName]);\n          } else {\n            row.push(null);\n          }\n        }\n        values.push(row);\n      }\n      return Promise.resolve(values);\n    } catch (err) {\n      return Promise.reject(new Error(`GetValues: ${err.message}`));\n    }\n  }\n\n}\n"]}